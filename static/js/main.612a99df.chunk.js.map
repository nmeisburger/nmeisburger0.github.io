{"version":3,"sources":["static/resume.pdf","static/trees.svg","static/mountains.svg","components/navbar/navbar.js","components/links/links.js","components/resume/resume.js","components/homepage/homepage.js","components/bio/bio.js","components/projects/projects.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hidden","toggleNavbar","bind","assertThisInitialized","setState","react_default","a","createElement","className","onClick","style","opacity","src","alt","navbar_headers","map","_ref","name","to","modules","smooth","duration","key","React","Component","contact_links","icon","label","link","Links","href","concat","Resume","dist","width","resume","target","rel","Homepage","resume_resume","Bio","flexDirection","flexWrap","justifyContent","trees","bioContent","line","Projects","currentSlide","changeIdx","idx","_this2","projects","project","indexOf","bullets","bullet","mountains","Contact","textDecoration","App","components_navbar_navbar","links_links","id","homepage_homepage","components_bio_bio","components_projects_projects","contact_contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.612a99df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.106244dd.pdf\";","module.exports = __webpack_public_path__ + \"static/media/trees.22cf6852.svg\";","module.exports = __webpack_public_path__ + \"static/media/mountains.26193b59.svg\";","import React from 'react';\r\nimport * as Scroll from 'react-scroll';\r\nimport { navbar_headers } from './navbar.json';\r\nimport './navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hidden: true\r\n        }\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    }\r\n\r\n    toggleNavbar () {\r\n        this.setState({\r\n            hidden: !this.state.hidden\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='navbar-open' onClick={this.toggleNavbar} style={this.state.hidden ? {} : {opacity: 0}}>\r\n                    <img src=\"https://icon.now.sh/burger/DCDFE5/40\" alt='Menu' />\r\n                </div>\r\n                <div className={this.state.hidden ? ('navbar-hidden') : ('navbar-visible')}>\r\n                    <div className='navbar-close' onClick={this.toggleNavbar}>\r\n                        <img className='navbar-close-x' src=\"https://icon.now.sh/x/565D6D/25\" alt='X' />\r\n                    </div>\r\n                    {\r\n                        navbar_headers.map(({name, to}) => (\r\n                            <Scroll.Link to={to} smooth={true} duration={400} key={name}>\r\n                                <div className='navbar-link'>\r\n                                    <p>{name}</p>\r\n                                </div>\r\n                            </Scroll.Link>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './links.css';\r\n\r\nconst contact_links = [\r\n    {\r\n        icon: \"https://icon.now.sh/mail_outline/email\",\r\n        label: \"email me \",\r\n        link: \"mailto:Nicholas.C.Meisburger@rice.edu\"\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/linkedin\",\r\n        label: \"find me on LinkedIn \",\r\n        link: \"https://www.linkedin.com/in/nicholas-meisburger-65140b186/\"\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/github\",\r\n        label: \"checkout my GitHub \",\r\n        link: \"https://github.com/nmeisburger0\"\r\n    }\r\n]\r\n\r\nconst Links = () => (\r\n    <div className='quick-links'>\r\n        {\r\n            contact_links.map(({ icon, label, link }) => (\r\n                <a href={link} key={label}>\r\n                    <img className='quick-link' src={`${icon}/DCDFE5/40`} alt='' />\r\n                </a>\r\n            ))\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Links","import React from 'react';\r\nimport { Box } from 'rebass';\r\nimport './resume.css';\r\nimport resume from '../../static/resume.pdf';\r\n\r\nconst Resume = () => (\r\n    <Box width={[240, 180]}>\r\n        <a href={resume} target='_blank' rel=\"noopener noreferrer\">\r\n            <div className='resume-link'>\r\n                <p className='resume-link-text'>my resume</p>\r\n            </div>\r\n        </a>\r\n    </Box>\r\n)\r\n\r\nexport default Resume;","import React from 'react';\r\nimport Resume from '../resume/resume';\r\nimport './homepage.css';\r\n\r\n\r\nconst Homepage = () => (\r\n    <div className='homepage'>\r\n        <h1 className='name'>nicholas meisburger</h1>\r\n        <Resume/>\r\n    </div>\r\n)\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Box, Image, Flex } from 'rebass';\r\nimport './bio.css';\r\nimport { bioContent } from './bio.json';\r\nimport trees from '../../static/trees.svg';\r\n\r\nconst Bio = () => (\r\n    <div className='bio'>\r\n        <h1 className='about-me'>about me</h1>\r\n        <Flex flexDirection='row' flexWrap='wrap' justifyContent='center'>\r\n            <Box className='trees' width={[0.6, 0.4, 0.25, 0.25]}>\r\n                <Image src={trees} alt='' />\r\n            </Box>\r\n            <Box width={[0.8, 0.6, 0.5, 0.5]} className='bio-content'>\r\n                {\r\n                    bioContent.map(({ line, key }) => (\r\n                        <p key={key}>{line}</p>\r\n                    ))\r\n                }\r\n            </Box>\r\n        </Flex>\r\n\r\n    </div >\r\n)\r\n\r\nexport default Bio;","import React from 'react';\r\nimport { Box, Image, Flex } from 'rebass';\r\nimport './projects.css';\r\nimport { projects } from './projects.json';\r\nimport mountains from '../../static/mountains.svg'\r\n\r\nclass Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { currentSlide: 0 }\r\n        this.changeIdx = this.changeIdx.bind(this)\r\n    }\r\n\r\n    changeIdx(idx) {\r\n        this.setState({ currentSlide: idx })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='projects'>\r\n                <h1 className='my-projects'>my projects</h1>\r\n                <Flex flexDirection='row' flexWrap='wrap' justifyContent='center'>\r\n\r\n                    <Box className='projects-content' width={[0.85, 0.7, 0.6, 0.5]}>\r\n                        <div className='dots'>\r\n                            {\r\n                                projects.map(project => (\r\n                                    <div className={projects.indexOf(project) === this.state.currentSlide ? ('project-dot-active') : ('project-dot-inactive')}\r\n                                        onClick={() => this.changeIdx(projects.indexOf(project))} key={`dot${projects.indexOf(project)}`}>\r\n                                        {projects.indexOf(project) + 1}\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <Box className='project-content' width={1}>\r\n                            <h1 className='project-title'>{projects[this.state.currentSlide].name}</h1>\r\n                            {\r\n                                projects[this.state.currentSlide].bullets.map(bullet => (\r\n                                    <p className='project-description' key={`${projects[this.state.currentSlide].name}+${projects[this.state.currentSlide].bullets.indexOf(bullet)}`}>\r\n                                        <img src=\"https://icon.now.sh/arrow/DCDFE5/12\" alt=\"\" /> {' '} {bullet}\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className='mountains' width={[0.9, 0.7, 0.45, 0.4]}>\r\n                        <Image src={mountains} alt='' />\r\n                    </Box>\r\n                </Flex>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './contact.css';\r\n\r\nexport const contact_links = [\r\n    {\r\n        icon: \"https://icon.now.sh/email\",\r\n        label: \"email me \",\r\n        link: \"mailto:Nicholas.C.Meisburger@rice.edu\",\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/linkedin\",\r\n        label: \"find me on LinkedIn \",\r\n        link: \"https://www.linkedin.com/in/nicholas-meisburger-65140b186/\",\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/github\",\r\n        label: \"checkout my GitHub \",\r\n        link: \"https://github.com/nmeisburger0\",\r\n    }\r\n]\r\n\r\nconst Contact = () => (\r\n    <div className='contact'>\r\n        <h1 className='contact-me'>contact me</h1>\r\n        <div className='contact-links'>\r\n            {\r\n                contact_links.map(({ icon, label, link }) => (\r\n                    <a href={link} rel=\"noopener noreferrer\" key={label} style={{ textDecoration: 'none' }}>\r\n                        <div className='contact-link'>\r\n                            <div className='contact-link-content'>\r\n                                <img src={`${icon}/565D6D/60`} alt='' />\r\n                                <p>{label}</p>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Contact;","import React from 'react';\nimport { Element } from 'react-scroll';\nimport Navbar from './components/navbar/navbar';\nimport Links from './components/links/links';\nimport Homepage from './components/homepage/homepage';\nimport Bio from './components/bio/bio';\nimport Projects from './components/projects/projects';\nimport Contact from './components/contact/contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Links />\n      <Element name='home' id='home'>\n        <Homepage />\n      </Element>\n      <Element name='bio' id='bio'>\n        <Bio />\n      </Element>\n      <Element name='projects' id='projects'>\n        <Projects />\n      </Element>\n      <Element name='contact' id='contact'>\n        <Contact />\n      </Element>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}