{"version":3,"sources":["static/resume.pdf","static/nameLogo.svg","static/bio.svg","static/projects.svg","static/contact.svg","components/navbar/navbar.js","components/logo/logo.js","components/resume/resume.js","components/homepage/homepage.js","components/bio/bio.js","components/projects/projects.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","links","name","to","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentIdx","expanded","homeHeight","undefined","bioHeight","projectsHeight","contactHeight","updateIdx","bind","assertThisInitialized","expand","scrollHandler","idx","setState","scrollOffset","window","scrollY","addEventListener","document","getElementById","clientHeight","removeEventListener","_this2","barOffsetX","barOffsetY","h","toggleSyle","transform","react_default","a","createElement","className","map","link","modules","smooth","duration","key","concat","indexOf","style","src","alt","onClick","maxHeight","onMouseEnter","React","Component","Resume","dist","width","href","resume","target","rel","Homepage","nameLogo","resume_resume","Bio","ml","mr","bioTitle","bioContent","_ref","line","Projects","currentSlide","changeIdx","projectsTitle","projects","project","bullets","bullet","contact_links","icon","label","Contact","contactTitle","App","navbar_navbar","id","homepage_homepage","components_bio_bio","components_projects_projects","contact_contact","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.211a11de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.106244dd.pdf\";","module.exports = __webpack_public_path__ + \"static/media/nameLogo.ab3b1bbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/bio.d888cab8.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects.331a2690.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.36651377.svg\";","import React from 'react';\r\nimport * as Scroll from 'react-scroll';\r\nimport './navbar.css';\r\n\r\nconst links = [\r\n    {\r\n        name: \"home\",\r\n        to: \"home\"\r\n    },\r\n    {\r\n        name: \"bio\",\r\n        to: \"bio\"\r\n    },\r\n    {\r\n        name: \"projects\",\r\n        to: \"projects\"\r\n    },\r\n    {\r\n        name: \"contact\",\r\n        to: \"contact\"\r\n    }\r\n]\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentIdx: 0,\r\n            expanded: false,\r\n\r\n            homeHeight: undefined,\r\n            bioHeight: undefined,\r\n            projectsHeight: undefined,\r\n            contactHeight: undefined\r\n        }\r\n        this.updateIdx = this.updateIdx.bind(this)\r\n        this.expand = this.expand.bind(this)\r\n        this.scrollHandler = this.scrollHandler.bind(this)\r\n    }\r\n\r\n    updateIdx(idx) {\r\n        this.setState({ currentIdx: idx })\r\n    }\r\n\r\n    expand() {\r\n        this.setState({ expanded: !this.state.expanded })\r\n    }\r\n\r\n    scrollHandler() {\r\n        // const homeHeight = document.getElementById('home').clientHeight;\r\n        // const bioHeight = document.getElementById('bio').clientHeight;\r\n        // const projectsHeight = document.getElementById('projects').clientHeight;\r\n        // const contactHeight = document.getElementById('contact').clientHeight;\r\n        const scrollOffset = window.scrollY;\r\n        if (0 < scrollOffset && scrollOffset < this.state.homeHeight) {\r\n            this.setState({ currentIdx: 0 })\r\n        }\r\n        if (this.state.homeHeight < scrollOffset && scrollOffset < this.state.bioHeight) {\r\n            this.setState({ currentIdx: 1 })\r\n        }\r\n        if (this.state.bioHeight < scrollOffset && scrollOffset < this.state.projectsHeight) {\r\n            this.setState({ currentIdx: 2 })\r\n        }\r\n        if (this.state.projectsHeight < scrollOffset && scrollOffset < this.state.contactHeight) {\r\n            this.setState({ currentIdx: 3 })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.scrollHandler)\r\n        this.setState({\r\n            homeHeight: document.getElementById('home').clientHeight,\r\n            bioHeight: document.getElementById('home').clientHeight + document.getElementById('bio').clientHeight,\r\n            projectsHeight: document.getElementById('home').clientHeight + document.getElementById('bio').clientHeight + document.getElementById('projects').clientHeight,\r\n            contactHeight: document.getElementById('home').clientHeight + document.getElementById('bio').clientHeight + document.getElementById('projects').clientHeight + document.getElementById('contact').clientHeight\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollHandler)\r\n    }\r\n\r\n    render() {\r\n        let barOffsetX = -240 + 160 * this.state.currentIdx;\r\n        let barOffsetY = -200 + 50 * this.state.currentIdx;\r\n        let h = this.state.expanded ? (200) : (0)\r\n\r\n        let toggleSyle = {}\r\n        if (this.state.expanded) {\r\n            toggleSyle.transform = 'rotate(90deg)'\r\n        }\r\n        return (\r\n            <div className='navbar'>\r\n                <div className='navbar-wide'>\r\n                    <div className='navbar-links-container'>\r\n                        {\r\n                            links.map(link => (\r\n                                <Scroll.Link to={link.to} smooth={true} duration={400} key={`${link.name}`}>\r\n                                    <div className={links.indexOf(link) === this.state.currentIdx ? ('navbar-active') : ('navbar-inactive')}>\r\n                                        {link.name}\r\n                                    </div>\r\n                                </Scroll.Link>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className='bar' style={{ transform: `translateX(${barOffsetX}px)` }}></div>\r\n                </div>\r\n                <div className='navbar-narrow'>\r\n                    <img src='https://icon.now.sh/burger/011638/40' alt=\"\" className='navbar-toggle' onClick={this.expand} style={toggleSyle} />\r\n                    <div className='navbar-dropdown' style={{ maxHeight: `${h}px` }}>\r\n                        <div>\r\n                            {\r\n                                links.map(link => (\r\n                                    <Scroll.Link to={link.to} smooth={true} duration={400} key={`${link.name}`}>\r\n                                        <div onClick={() => this.updateIdx(links.indexOf(link))} onMouseEnter={() => this.updateIdx(links.indexOf(link))}\r\n                                            className={links.indexOf(link) === this.state.currentIdx ? ('navbar-active-narrow') : ('navbar-inactive-narrow')}>\r\n                                            {link.name}\r\n                                        </div>\r\n                                    </Scroll.Link>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className='bar-narrow' style={{ transform: `translateY(${barOffsetY}px)` }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './logo.css';\r\n\r\nclass Logo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            load: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({load: true})\r\n    }\r\n\r\n    render() {\r\n        let verticalLineStyle = {}\r\n        let horizantalLine1Style = {}\r\n        let horizantalLine2Style = {}\r\n        let firstnameStyle = {}\r\n        let lastnameStyle = {}\r\n        \r\n        if (this.state.load) {\r\n            verticalLineStyle.minHeight = '245px'\r\n            horizantalLine1Style.minWidth = '500px'\r\n            horizantalLine2Style.minWidth = '700px'\r\n            firstnameStyle.maxWidth = '500px'\r\n            lastnameStyle.maxWidth = '500px'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='vertical-line' style={verticalLineStyle} />\r\n                <div className='horizantal-line1' style={horizantalLine1Style} />\r\n                <div className='horizantal-line2' style={horizantalLine2Style} />\r\n                <div className='firstname' style={firstnameStyle}>\r\n                    <p>nicholas</p>\r\n                </div>\r\n                <div className='lastname' style={lastnameStyle}>\r\n                    <p>meisburger</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Box } from 'rebass';\r\nimport './resume.css';\r\nimport resume from '../../static/resume.pdf';\r\n\r\nconst Resume = () => (\r\n    <Box width={[200, 240]}>\r\n        <a href={resume} target='_blank' rel=\"noopener noreferrer\">\r\n            <div className='resume-link'>\r\n                <p className='resume-link-text'>my resume{' '}<img src={`https://icon.now.sh/arrow/87ADC6/13`} alt='' /></p>\r\n            </div>\r\n        </a>\r\n    </Box>\r\n)\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Box, Image } from 'rebass';\r\nimport Logo from '../logo/logo';\r\nimport './homepage.css';\r\nimport Resume from '../resume/resume';\r\nimport nameLogo from '../../static/nameLogo.svg';\r\n\r\nconst Homepage = () => (\r\n    <div className='homepage'>\r\n        <Box width={[0.9, 0.7, 0.7, 0.6]} className=\"name_title\">\r\n            <Image src={nameLogo} alt=\"Nicholas Meisburger\" />\r\n        </Box>\r\n        {/* <div className='fade-logo'> \r\n            <Logo />\r\n        </div> */}\r\n        <div className='resume-btn'>\r\n            <Resume />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Box, Image } from 'rebass';\r\nimport './bio.css';\r\nimport Resume from '../resume/resume';\r\nimport bioTitle from '../../static/bio.svg'\r\nimport { bioContent } from './bio.json';\r\n\r\nconst Bio = () => (\r\n    <div className='bio'>\r\n         <Box width={[0.9, 0.6, 0.5, 0.37]} ml='auto' mr='auto' className='page-title'>\r\n            <Image src={bioTitle} alt=\"my projects\" />\r\n        </Box>\r\n        <Box width={[0.85, 0.7, 0.6, 0.5]} className='bio-content'>\r\n            {\r\n                bioContent.map(({line, key}) => (\r\n                    <p key={key}>{line}</p>\r\n                ))\r\n            }\r\n        </Box>\r\n        <Box width={240} ml='auto' mr='auto'>\r\n            <Resume />\r\n        </Box>\r\n    </div>\r\n)\r\n\r\nexport default Bio;","import React from 'react';\r\nimport { Box, Image } from 'rebass';\r\nimport './projects.css';\r\nimport { projects } from './projects.json';\r\nimport projectsTitle from '../../static/projects.svg'\r\n\r\nclass Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { currentSlide: 0 }\r\n        this.changeIdx = this.changeIdx.bind(this)\r\n    }\r\n\r\n    changeIdx(idx) {\r\n        this.setState({ currentSlide: idx })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='projects'>\r\n                <Box width={[0.9, 0.6, 0.5, 0.4]} ml='auto' mr='auto' className='page-title'>\r\n                    <Image src={projectsTitle} alt=\"my projects\" />\r\n                </Box>\r\n                <div className='dots'>\r\n                    {\r\n                        projects.map(project => (\r\n                            <div className={projects.indexOf(project) === this.state.currentSlide ? ('project-dot-active') : ('project-dot-inactive')}\r\n                                onClick={() => this.changeIdx(projects.indexOf(project))} key={`dot${projects.indexOf(project)}`}>\r\n                                {projects.indexOf(project) + 1}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Box className='project-content' width={[0.85, 0.8, 0.7, 0.5]}>\r\n                    <h1 className='project-title'>{projects[this.state.currentSlide].name}</h1>\r\n                    {\r\n                        projects[this.state.currentSlide].bullets.map(bullet => (\r\n                            <p className='project-description' key={`${projects[this.state.currentSlide].name}+${projects[this.state.currentSlide].bullets.indexOf(bullet)}`}>\r\n                                <img src=\"https://icon.now.sh/arrow/87ADC6/12\" alt=\"\" /> {' '} {bullet}\r\n                            </p>\r\n                        ))\r\n                    }\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Box, Image } from 'rebass';\r\nimport './contact.css';\r\nimport contactTitle from '../../static/contact.svg';\r\n\r\nexport const contact_links = [\r\n    {\r\n        icon: \"https://icon.now.sh/email\",\r\n        label: \"email me \",\r\n        link: \"mailto:Nicholas.C.Meisburger@rice.edu\",\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/linkedin\",\r\n        label: \"find me on LinkedIn \",\r\n        link: \"https://www.linkedin.com/in/nicholas-meisburger-65140b186/\",\r\n    },\r\n    {\r\n        icon: \"https://icon.now.sh/github\",\r\n        label: \"checkout my GitHub \",\r\n        link: \"https://github.com/nmeisburger0\",\r\n    }\r\n]\r\n\r\nconst Contact = () => (\r\n    <div className='contact'>\r\n        <Box width={[0.9, 0.6, 0.5, 0.4]} ml='auto' mr='auto' className='page-title'>\r\n            <Image src={contactTitle} alt=\"my projects\" />\r\n        </Box>\r\n        <div className='contact-links'>\r\n            {\r\n                contact_links.map(({ icon, label, link }) => (\r\n                    <a href={link} rel=\"noopener noreferrer\" key={label}>\r\n                        <div className='contact-link'>\r\n                            <img src={`${icon}/87ADC6/60`} alt='' />\r\n                            <p className='contact-link-text'>{label} <img src=\"https://icon.now.sh/arrow/87ADC6/12\" alt=''/></p>\r\n                        </div>\r\n                    </a>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Contact;","import React from 'react';\nimport { Element } from 'react-scroll';\nimport Navbar from './components/navbar/navbar';\nimport Homepage from './components/homepage/homepage';\nimport Bio from './components/bio/bio';\nimport Projects from './components/projects/projects';\nimport Contact from './components/contact/contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Element name='home' id='home'>\n        <Homepage />\n      </Element>\n      <Element name='bio' id='bio'>\n        <Bio />\n      </Element>\n      <Element name='projects' id='projects'>\n        <Projects />\n      </Element>\n      <Element name='contact' id='contact'>\n        <Contact />\n      </Element>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}